services:
  web-api:
    image: ${DOCKER_REGISTRY-}webapi
    container_name: web-api
    networks:
      - agsr-network
    build:
      context: .
      dockerfile: src/Web.Api/Dockerfile
    ports:
      - 5000:8080
      - 5001:8081
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:${WEB_API_PORT};https://+:${WEB_API_PORT_HTTPS}
      - CERT_PASSWORD=${CERT_PASSWORD}
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres-agsr-db"]
      interval: 5s
      timeout: 5s
      retries: 10

  seq:
    image: datalust/seq:2024.3
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 8081:80

  fhir-seeder-cli:
    container_name: fhir-seeder-cli
    networks:
      - agsr-network
    build:
     context: .
     dockerfile: src/FhirSeederCLI/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      web-api:
        condition: service_started  # Changed from service_healthy
    environment:
        - WAIT_FOR_API=${WAIT_FOR_API}
        - MAX_RETRIES=${MAX_RETRIES}
        - RETRY_INTERVAL=${RETRY_INTERVAL}
        - WEB_API_URL=${WEB_API_URL}
        - WEB_API_HEALTH_URL=${WEB_API_HEALTH_URL}
        - WAIT_TIMEOUT=${WAIT_TIMEOUT}
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    tty: true
    stdin_open: true

networks:
  agsr-network:
    driver: bridge